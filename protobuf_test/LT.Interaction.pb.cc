// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LT.Interaction.proto

#include "LT.Interaction.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace LT {
class interaction_TerminalInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<interaction_TerminalInfo>
      _instance;
} _interaction_TerminalInfo_default_instance_;
class interaction_BaseStationInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<interaction_BaseStationInfo>
      _instance;
} _interaction_BaseStationInfo_default_instance_;
class interaction_BaseCommandInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<interaction_BaseCommandInfo>
      _instance;
} _interaction_BaseCommandInfo_default_instance_;
class interaction_TermCommandInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<interaction_TermCommandInfo>
      _instance;
} _interaction_TermCommandInfo_default_instance_;
class interactionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<interaction>
      _instance;
} _interaction_default_instance_;
}  // namespace LT
namespace protobuf_LT_2eInteraction_2eproto {
void InitDefaultsinteraction_TerminalInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::LT::_interaction_TerminalInfo_default_instance_;
    new (ptr) ::LT::interaction_TerminalInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::interaction_TerminalInfo::InitAsDefaultInstance();
}

void InitDefaultsinteraction_TerminalInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinteraction_TerminalInfoImpl);
}

void InitDefaultsinteraction_BaseStationInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::LT::_interaction_BaseStationInfo_default_instance_;
    new (ptr) ::LT::interaction_BaseStationInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::interaction_BaseStationInfo::InitAsDefaultInstance();
}

void InitDefaultsinteraction_BaseStationInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinteraction_BaseStationInfoImpl);
}

void InitDefaultsinteraction_BaseCommandInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::LT::_interaction_BaseCommandInfo_default_instance_;
    new (ptr) ::LT::interaction_BaseCommandInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::interaction_BaseCommandInfo::InitAsDefaultInstance();
}

void InitDefaultsinteraction_BaseCommandInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinteraction_BaseCommandInfoImpl);
}

void InitDefaultsinteraction_TermCommandInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::LT::_interaction_TermCommandInfo_default_instance_;
    new (ptr) ::LT::interaction_TermCommandInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::interaction_TermCommandInfo::InitAsDefaultInstance();
}

void InitDefaultsinteraction_TermCommandInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinteraction_TermCommandInfoImpl);
}

void InitDefaultsinteractionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_LT_2eInteraction_2eproto::InitDefaultsinteraction_TerminalInfo();
  protobuf_LT_2eInteraction_2eproto::InitDefaultsinteraction_TermCommandInfo();
  protobuf_LT_2eInteraction_2eproto::InitDefaultsinteraction_BaseStationInfo();
  protobuf_LT_2eInteraction_2eproto::InitDefaultsinteraction_BaseCommandInfo();
  {
    void* ptr = &::LT::_interaction_default_instance_;
    new (ptr) ::LT::interaction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LT::interaction::InitAsDefaultInstance();
}

void InitDefaultsinteraction() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinteractionImpl);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TerminalInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TerminalInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TerminalInfo, hostname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TerminalInfo, mac_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TerminalInfo, ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TerminalInfo, sensor_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TerminalInfo, sensor_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TerminalInfo, sensor_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TerminalInfo, romote_ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TerminalInfo, calibration_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TerminalInfo, term_config_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  8,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseStationInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseStationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseStationInfo, hostname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseStationInfo, bs_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseStationInfo, ingroup_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseStationInfo, bs_freq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseStationInfo, bs_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseStationInfo, bs_orientation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseStationInfo, led_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseStationInfo, motor_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseStationInfo, motor_speed_),
  0,
  5,
  6,
  1,
  2,
  3,
  7,
  8,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseCommandInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseCommandInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseCommandInfo, cmd_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseCommandInfo, cmd_arg1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseCommandInfo, cmd_arg2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_BaseCommandInfo, cmd_arg3_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TermCommandInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TermCommandInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TermCommandInfo, cmd_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TermCommandInfo, cmd_arg1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TermCommandInfo, cmd_arg2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction_TermCommandInfo, cmd_arg3_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction, terminal_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction, terminal_cmd_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction, terminal_cmd_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction, base_station_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction, base_cmd_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction, base_cmd_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction, config_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction, terminal_info_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LT::interaction, base_station_info_list_),
  5,
  1,
  2,
  6,
  3,
  4,
  7,
  0,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 14, sizeof(::LT::interaction_TerminalInfo)},
  { 23, 37, sizeof(::LT::interaction_BaseStationInfo)},
  { 46, 55, sizeof(::LT::interaction_BaseCommandInfo)},
  { 59, 68, sizeof(::LT::interaction_TermCommandInfo)},
  { 72, 87, sizeof(::LT::interaction)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_interaction_TerminalInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_interaction_BaseStationInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_interaction_BaseCommandInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_interaction_TermCommandInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LT::_interaction_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "LT.Interaction.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024LT.Interaction.proto\022\002LT\"\267\n\n\013interacti"
      "on\022\016\n\006msg_id\030\001 \002(\005\0223\n\rterminal_info\030\002 \001("
      "\0132\034.LT.interaction.TerminalInfo\022:\n\021termi"
      "nal_cmd_info\030\003 \001(\0132\037.LT.interaction.Term"
      "CommandInfo\022\033\n\023terminal_cmd_result\030\004 \001(\010"
      "\022:\n\021base_station_info\030\005 \001(\0132\037.LT.interac"
      "tion.BaseStationInfo\0226\n\rbase_cmd_info\030\006 "
      "\001(\0132\037.LT.interaction.BaseCommandInfo\022\027\n\017"
      "base_cmd_result\030\007 \001(\010\022\023\n\013config_file\030\t \001"
      "(\t\0228\n\022terminal_info_list\030\n \003(\0132\034.LT.inte"
      "raction.TerminalInfo\022\?\n\026base_station_inf"
      "o_list\030\013 \003(\0132\037.LT.interaction.BaseStatio"
      "nInfo\032\322\001\n\014TerminalInfo\022\020\n\010hostname\030\001 \002(\t"
      "\022\020\n\010mac_addr\030\002 \002(\t\022\017\n\007ip_addr\030\003 \002(\t\022\026\n\016s"
      "ensor_channel\030\004 \001(\t\022\025\n\rsensor_height\030\005 \001"
      "(\t\022\025\n\rsensor_offset\030\006 \001(\t\022\026\n\016romote_ip_a"
      "ddr\030\007 \001(\t\022\032\n\022calibration_status\030\010 \001(\010\022\023\n"
      "\013term_config\030\t \001(\t\032\305\001\n\017BaseStationInfo\022\020"
      "\n\010hostname\030\001 \002(\t\022\r\n\005bs_id\030\002 \002(\r\022\024\n\014ingro"
      "up_addr\030\003 \002(\r\022\017\n\007bs_freq\030\004 \001(\t\022\023\n\013bs_loc"
      "ation\030\005 \001(\t\022\026\n\016bs_orientation\030\006 \001(\t\022\022\n\nl"
      "ed_status\030\007 \001(\010\022\024\n\014motor_status\030\010 \001(\010\022\023\n"
      "\013motor_speed\030\t \001(\t\032\367\001\n\017BaseCommandInfo\022="
      "\n\006cmd_id\030\001 \002(\0162-.LT.interaction.BaseComm"
      "andInfo.BaseCommandId\022\020\n\010cmd_arg1\030\002 \001(\t\022"
      "\020\n\010cmd_arg2\030\003 \001(\t\022\020\n\010cmd_arg3\030\004 \001(\t\"o\n\rB"
      "aseCommandId\022\020\n\014SET_ADDR_CMD\020\000\022\020\n\014SET_FR"
      "EQ_CMD\020\001\022\021\n\rSET_MOTOR_CMD\020\002\022\017\n\013SET_LED_C"
      "MD\020\003\022\n\n\006LS_CMD\020\004\022\n\n\006LS_ALL\020\005\032\325\001\n\017TermCom"
      "mandInfo\022=\n\006cmd_id\030\001 \002(\0162-.LT.interactio"
      "n.TermCommandInfo.TermCommandId\022\020\n\010cmd_a"
      "rg1\030\002 \001(\t\022\020\n\010cmd_arg2\030\003 \001(\t\022\020\n\010cmd_arg3\030"
      "\004 \001(\t\"M\n\rTermCommandId\022\023\n\017ENTER_FIXED_CM"
      "D\020\000\022\022\n\016QUIT_FIXED_CMD\020\001\022\023\n\017REBOOT_TERM_C"
      "MD\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1364);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LT.Interaction.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_LT_2eInteraction_2eproto
namespace LT {
const ::google::protobuf::EnumDescriptor* interaction_BaseCommandInfo_BaseCommandId_descriptor() {
  protobuf_LT_2eInteraction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LT_2eInteraction_2eproto::file_level_enum_descriptors[0];
}
bool interaction_BaseCommandInfo_BaseCommandId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const interaction_BaseCommandInfo_BaseCommandId interaction_BaseCommandInfo::SET_ADDR_CMD;
const interaction_BaseCommandInfo_BaseCommandId interaction_BaseCommandInfo::SET_FREQ_CMD;
const interaction_BaseCommandInfo_BaseCommandId interaction_BaseCommandInfo::SET_MOTOR_CMD;
const interaction_BaseCommandInfo_BaseCommandId interaction_BaseCommandInfo::SET_LED_CMD;
const interaction_BaseCommandInfo_BaseCommandId interaction_BaseCommandInfo::LS_CMD;
const interaction_BaseCommandInfo_BaseCommandId interaction_BaseCommandInfo::LS_ALL;
const interaction_BaseCommandInfo_BaseCommandId interaction_BaseCommandInfo::BaseCommandId_MIN;
const interaction_BaseCommandInfo_BaseCommandId interaction_BaseCommandInfo::BaseCommandId_MAX;
const int interaction_BaseCommandInfo::BaseCommandId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* interaction_TermCommandInfo_TermCommandId_descriptor() {
  protobuf_LT_2eInteraction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LT_2eInteraction_2eproto::file_level_enum_descriptors[1];
}
bool interaction_TermCommandInfo_TermCommandId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const interaction_TermCommandInfo_TermCommandId interaction_TermCommandInfo::ENTER_FIXED_CMD;
const interaction_TermCommandInfo_TermCommandId interaction_TermCommandInfo::QUIT_FIXED_CMD;
const interaction_TermCommandInfo_TermCommandId interaction_TermCommandInfo::REBOOT_TERM_CMD;
const interaction_TermCommandInfo_TermCommandId interaction_TermCommandInfo::TermCommandId_MIN;
const interaction_TermCommandInfo_TermCommandId interaction_TermCommandInfo::TermCommandId_MAX;
const int interaction_TermCommandInfo::TermCommandId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void interaction_TerminalInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int interaction_TerminalInfo::kHostnameFieldNumber;
const int interaction_TerminalInfo::kMacAddrFieldNumber;
const int interaction_TerminalInfo::kIpAddrFieldNumber;
const int interaction_TerminalInfo::kSensorChannelFieldNumber;
const int interaction_TerminalInfo::kSensorHeightFieldNumber;
const int interaction_TerminalInfo::kSensorOffsetFieldNumber;
const int interaction_TerminalInfo::kRomoteIpAddrFieldNumber;
const int interaction_TerminalInfo::kCalibrationStatusFieldNumber;
const int interaction_TerminalInfo::kTermConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

interaction_TerminalInfo::interaction_TerminalInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_LT_2eInteraction_2eproto::InitDefaultsinteraction_TerminalInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.interaction.TerminalInfo)
}
interaction_TerminalInfo::interaction_TerminalInfo(const interaction_TerminalInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hostname()) {
    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  mac_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mac_addr()) {
    mac_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_addr_);
  }
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip_addr()) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  sensor_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sensor_channel()) {
    sensor_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sensor_channel_);
  }
  sensor_height_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sensor_height()) {
    sensor_height_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sensor_height_);
  }
  sensor_offset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sensor_offset()) {
    sensor_offset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sensor_offset_);
  }
  romote_ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_romote_ip_addr()) {
    romote_ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.romote_ip_addr_);
  }
  term_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_term_config()) {
    term_config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.term_config_);
  }
  calibration_status_ = from.calibration_status_;
  // @@protoc_insertion_point(copy_constructor:LT.interaction.TerminalInfo)
}

void interaction_TerminalInfo::SharedCtor() {
  _cached_size_ = 0;
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sensor_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sensor_height_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sensor_offset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  romote_ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  term_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  calibration_status_ = false;
}

interaction_TerminalInfo::~interaction_TerminalInfo() {
  // @@protoc_insertion_point(destructor:LT.interaction.TerminalInfo)
  SharedDtor();
}

void interaction_TerminalInfo::SharedDtor() {
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sensor_channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sensor_height_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sensor_offset_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  romote_ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  term_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void interaction_TerminalInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* interaction_TerminalInfo::descriptor() {
  ::protobuf_LT_2eInteraction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LT_2eInteraction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const interaction_TerminalInfo& interaction_TerminalInfo::default_instance() {
  ::protobuf_LT_2eInteraction_2eproto::InitDefaultsinteraction_TerminalInfo();
  return *internal_default_instance();
}

interaction_TerminalInfo* interaction_TerminalInfo::New(::google::protobuf::Arena* arena) const {
  interaction_TerminalInfo* n = new interaction_TerminalInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void interaction_TerminalInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.interaction.TerminalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!hostname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hostname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!mac_addr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mac_addr_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!ip_addr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ip_addr_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!sensor_channel_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sensor_channel_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!sensor_height_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sensor_height_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!sensor_offset_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sensor_offset_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!romote_ip_addr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*romote_ip_addr_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!term_config_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*term_config_.UnsafeRawStringPointer())->clear();
    }
  }
  calibration_status_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool interaction_TerminalInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.interaction.TerminalInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string hostname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hostname().data(), static_cast<int>(this->hostname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.TerminalInfo.hostname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string mac_addr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mac_addr().data(), static_cast<int>(this->mac_addr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.TerminalInfo.mac_addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string ip_addr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.TerminalInfo.ip_addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sensor_channel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sensor_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sensor_channel().data(), static_cast<int>(this->sensor_channel().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.TerminalInfo.sensor_channel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sensor_height = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sensor_height()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sensor_height().data(), static_cast<int>(this->sensor_height().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.TerminalInfo.sensor_height");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sensor_offset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sensor_offset()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sensor_offset().data(), static_cast<int>(this->sensor_offset().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.TerminalInfo.sensor_offset");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string romote_ip_addr = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_romote_ip_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->romote_ip_addr().data(), static_cast<int>(this->romote_ip_addr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.TerminalInfo.romote_ip_addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool calibration_status = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_calibration_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &calibration_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string term_config = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_term_config()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->term_config().data(), static_cast<int>(this->term_config().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.TerminalInfo.term_config");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.interaction.TerminalInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.interaction.TerminalInfo)
  return false;
#undef DO_
}

void interaction_TerminalInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.interaction.TerminalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string hostname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hostname(), output);
  }

  // required string mac_addr = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac_addr().data(), static_cast<int>(this->mac_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.mac_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mac_addr(), output);
  }

  // required string ip_addr = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip_addr(), output);
  }

  // optional string sensor_channel = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sensor_channel().data(), static_cast<int>(this->sensor_channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.sensor_channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sensor_channel(), output);
  }

  // optional string sensor_height = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sensor_height().data(), static_cast<int>(this->sensor_height().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.sensor_height");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sensor_height(), output);
  }

  // optional string sensor_offset = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sensor_offset().data(), static_cast<int>(this->sensor_offset().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.sensor_offset");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sensor_offset(), output);
  }

  // optional string romote_ip_addr = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->romote_ip_addr().data(), static_cast<int>(this->romote_ip_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.romote_ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->romote_ip_addr(), output);
  }

  // optional bool calibration_status = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->calibration_status(), output);
  }

  // optional string term_config = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->term_config().data(), static_cast<int>(this->term_config().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.term_config");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->term_config(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.interaction.TerminalInfo)
}

::google::protobuf::uint8* interaction_TerminalInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.interaction.TerminalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string hostname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hostname(), target);
  }

  // required string mac_addr = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac_addr().data(), static_cast<int>(this->mac_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.mac_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mac_addr(), target);
  }

  // required string ip_addr = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip_addr(), target);
  }

  // optional string sensor_channel = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sensor_channel().data(), static_cast<int>(this->sensor_channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.sensor_channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sensor_channel(), target);
  }

  // optional string sensor_height = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sensor_height().data(), static_cast<int>(this->sensor_height().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.sensor_height");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sensor_height(), target);
  }

  // optional string sensor_offset = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sensor_offset().data(), static_cast<int>(this->sensor_offset().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.sensor_offset");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->sensor_offset(), target);
  }

  // optional string romote_ip_addr = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->romote_ip_addr().data(), static_cast<int>(this->romote_ip_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.romote_ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->romote_ip_addr(), target);
  }

  // optional bool calibration_status = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->calibration_status(), target);
  }

  // optional string term_config = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->term_config().data(), static_cast<int>(this->term_config().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TerminalInfo.term_config");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->term_config(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.interaction.TerminalInfo)
  return target;
}

size_t interaction_TerminalInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:LT.interaction.TerminalInfo)
  size_t total_size = 0;

  if (has_hostname()) {
    // required string hostname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostname());
  }

  if (has_mac_addr()) {
    // required string mac_addr = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac_addr());
  }

  if (has_ip_addr()) {
    // required string ip_addr = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  return total_size;
}
size_t interaction_TerminalInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.interaction.TerminalInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string hostname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostname());

    // required string mac_addr = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac_addr());

    // required string ip_addr = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 248u) {
    // optional string sensor_channel = 4;
    if (has_sensor_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sensor_channel());
    }

    // optional string sensor_height = 5;
    if (has_sensor_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sensor_height());
    }

    // optional string sensor_offset = 6;
    if (has_sensor_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sensor_offset());
    }

    // optional string romote_ip_addr = 7;
    if (has_romote_ip_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->romote_ip_addr());
    }

    // optional string term_config = 9;
    if (has_term_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->term_config());
    }

  }
  // optional bool calibration_status = 8;
  if (has_calibration_status()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void interaction_TerminalInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.interaction.TerminalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const interaction_TerminalInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const interaction_TerminalInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.interaction.TerminalInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.interaction.TerminalInfo)
    MergeFrom(*source);
  }
}

void interaction_TerminalInfo::MergeFrom(const interaction_TerminalInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.interaction.TerminalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hostname();
      hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_mac_addr();
      mac_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_addr_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_ip_addr();
      ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_sensor_channel();
      sensor_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sensor_channel_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_sensor_height();
      sensor_height_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sensor_height_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_sensor_offset();
      sensor_offset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sensor_offset_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_romote_ip_addr();
      romote_ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.romote_ip_addr_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_term_config();
      term_config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.term_config_);
    }
  }
  if (cached_has_bits & 0x00000100u) {
    set_calibration_status(from.calibration_status());
  }
}

void interaction_TerminalInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.interaction.TerminalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void interaction_TerminalInfo::CopyFrom(const interaction_TerminalInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.interaction.TerminalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool interaction_TerminalInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void interaction_TerminalInfo::Swap(interaction_TerminalInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void interaction_TerminalInfo::InternalSwap(interaction_TerminalInfo* other) {
  using std::swap;
  hostname_.Swap(&other->hostname_);
  mac_addr_.Swap(&other->mac_addr_);
  ip_addr_.Swap(&other->ip_addr_);
  sensor_channel_.Swap(&other->sensor_channel_);
  sensor_height_.Swap(&other->sensor_height_);
  sensor_offset_.Swap(&other->sensor_offset_);
  romote_ip_addr_.Swap(&other->romote_ip_addr_);
  term_config_.Swap(&other->term_config_);
  swap(calibration_status_, other->calibration_status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata interaction_TerminalInfo::GetMetadata() const {
  protobuf_LT_2eInteraction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LT_2eInteraction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void interaction_BaseStationInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int interaction_BaseStationInfo::kHostnameFieldNumber;
const int interaction_BaseStationInfo::kBsIdFieldNumber;
const int interaction_BaseStationInfo::kIngroupAddrFieldNumber;
const int interaction_BaseStationInfo::kBsFreqFieldNumber;
const int interaction_BaseStationInfo::kBsLocationFieldNumber;
const int interaction_BaseStationInfo::kBsOrientationFieldNumber;
const int interaction_BaseStationInfo::kLedStatusFieldNumber;
const int interaction_BaseStationInfo::kMotorStatusFieldNumber;
const int interaction_BaseStationInfo::kMotorSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

interaction_BaseStationInfo::interaction_BaseStationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_LT_2eInteraction_2eproto::InitDefaultsinteraction_BaseStationInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.interaction.BaseStationInfo)
}
interaction_BaseStationInfo::interaction_BaseStationInfo(const interaction_BaseStationInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hostname()) {
    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  bs_freq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bs_freq()) {
    bs_freq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bs_freq_);
  }
  bs_location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bs_location()) {
    bs_location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bs_location_);
  }
  bs_orientation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bs_orientation()) {
    bs_orientation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bs_orientation_);
  }
  motor_speed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_motor_speed()) {
    motor_speed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.motor_speed_);
  }
  ::memcpy(&bs_id_, &from.bs_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&motor_status_) -
    reinterpret_cast<char*>(&bs_id_)) + sizeof(motor_status_));
  // @@protoc_insertion_point(copy_constructor:LT.interaction.BaseStationInfo)
}

void interaction_BaseStationInfo::SharedCtor() {
  _cached_size_ = 0;
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bs_freq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bs_location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bs_orientation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  motor_speed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bs_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&motor_status_) -
      reinterpret_cast<char*>(&bs_id_)) + sizeof(motor_status_));
}

interaction_BaseStationInfo::~interaction_BaseStationInfo() {
  // @@protoc_insertion_point(destructor:LT.interaction.BaseStationInfo)
  SharedDtor();
}

void interaction_BaseStationInfo::SharedDtor() {
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bs_freq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bs_location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bs_orientation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  motor_speed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void interaction_BaseStationInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* interaction_BaseStationInfo::descriptor() {
  ::protobuf_LT_2eInteraction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LT_2eInteraction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const interaction_BaseStationInfo& interaction_BaseStationInfo::default_instance() {
  ::protobuf_LT_2eInteraction_2eproto::InitDefaultsinteraction_BaseStationInfo();
  return *internal_default_instance();
}

interaction_BaseStationInfo* interaction_BaseStationInfo::New(::google::protobuf::Arena* arena) const {
  interaction_BaseStationInfo* n = new interaction_BaseStationInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void interaction_BaseStationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.interaction.BaseStationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!hostname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hostname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!bs_freq_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bs_freq_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!bs_location_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bs_location_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!bs_orientation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bs_orientation_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!motor_speed_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*motor_speed_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&bs_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&led_status_) -
        reinterpret_cast<char*>(&bs_id_)) + sizeof(led_status_));
  }
  motor_status_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool interaction_BaseStationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.interaction.BaseStationInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string hostname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hostname().data(), static_cast<int>(this->hostname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.BaseStationInfo.hostname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 bs_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bs_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bs_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ingroup_addr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_ingroup_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ingroup_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bs_freq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bs_freq()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bs_freq().data(), static_cast<int>(this->bs_freq().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.BaseStationInfo.bs_freq");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bs_location = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bs_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bs_location().data(), static_cast<int>(this->bs_location().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.BaseStationInfo.bs_location");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bs_orientation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bs_orientation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bs_orientation().data(), static_cast<int>(this->bs_orientation().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.BaseStationInfo.bs_orientation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool led_status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_led_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &led_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool motor_status = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_motor_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &motor_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string motor_speed = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_motor_speed()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->motor_speed().data(), static_cast<int>(this->motor_speed().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.BaseStationInfo.motor_speed");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.interaction.BaseStationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.interaction.BaseStationInfo)
  return false;
#undef DO_
}

void interaction_BaseStationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.interaction.BaseStationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string hostname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseStationInfo.hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hostname(), output);
  }

  // required uint32 bs_id = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->bs_id(), output);
  }

  // required uint32 ingroup_addr = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ingroup_addr(), output);
  }

  // optional string bs_freq = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bs_freq().data(), static_cast<int>(this->bs_freq().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseStationInfo.bs_freq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->bs_freq(), output);
  }

  // optional string bs_location = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bs_location().data(), static_cast<int>(this->bs_location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseStationInfo.bs_location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->bs_location(), output);
  }

  // optional string bs_orientation = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bs_orientation().data(), static_cast<int>(this->bs_orientation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseStationInfo.bs_orientation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->bs_orientation(), output);
  }

  // optional bool led_status = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->led_status(), output);
  }

  // optional bool motor_status = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->motor_status(), output);
  }

  // optional string motor_speed = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->motor_speed().data(), static_cast<int>(this->motor_speed().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseStationInfo.motor_speed");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->motor_speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.interaction.BaseStationInfo)
}

::google::protobuf::uint8* interaction_BaseStationInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.interaction.BaseStationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string hostname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseStationInfo.hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hostname(), target);
  }

  // required uint32 bs_id = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->bs_id(), target);
  }

  // required uint32 ingroup_addr = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ingroup_addr(), target);
  }

  // optional string bs_freq = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bs_freq().data(), static_cast<int>(this->bs_freq().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseStationInfo.bs_freq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->bs_freq(), target);
  }

  // optional string bs_location = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bs_location().data(), static_cast<int>(this->bs_location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseStationInfo.bs_location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bs_location(), target);
  }

  // optional string bs_orientation = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bs_orientation().data(), static_cast<int>(this->bs_orientation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseStationInfo.bs_orientation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->bs_orientation(), target);
  }

  // optional bool led_status = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->led_status(), target);
  }

  // optional bool motor_status = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->motor_status(), target);
  }

  // optional string motor_speed = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->motor_speed().data(), static_cast<int>(this->motor_speed().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseStationInfo.motor_speed");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->motor_speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.interaction.BaseStationInfo)
  return target;
}

size_t interaction_BaseStationInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:LT.interaction.BaseStationInfo)
  size_t total_size = 0;

  if (has_hostname()) {
    // required string hostname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostname());
  }

  if (has_bs_id()) {
    // required uint32 bs_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bs_id());
  }

  if (has_ingroup_addr()) {
    // required uint32 ingroup_addr = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ingroup_addr());
  }

  return total_size;
}
size_t interaction_BaseStationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.interaction.BaseStationInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000061) ^ 0x00000061) == 0) {  // All required fields are present.
    // required string hostname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostname());

    // required uint32 bs_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bs_id());

    // required uint32 ingroup_addr = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ingroup_addr());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 30u) {
    // optional string bs_freq = 4;
    if (has_bs_freq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bs_freq());
    }

    // optional string bs_location = 5;
    if (has_bs_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bs_location());
    }

    // optional string bs_orientation = 6;
    if (has_bs_orientation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bs_orientation());
    }

    // optional string motor_speed = 9;
    if (has_motor_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->motor_speed());
    }

  }
  // optional bool led_status = 7;
  if (has_led_status()) {
    total_size += 1 + 1;
  }

  // optional bool motor_status = 8;
  if (has_motor_status()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void interaction_BaseStationInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.interaction.BaseStationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const interaction_BaseStationInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const interaction_BaseStationInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.interaction.BaseStationInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.interaction.BaseStationInfo)
    MergeFrom(*source);
  }
}

void interaction_BaseStationInfo::MergeFrom(const interaction_BaseStationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.interaction.BaseStationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hostname();
      hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bs_freq();
      bs_freq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bs_freq_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_bs_location();
      bs_location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bs_location_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_bs_orientation();
      bs_orientation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bs_orientation_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_motor_speed();
      motor_speed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.motor_speed_);
    }
    if (cached_has_bits & 0x00000020u) {
      bs_id_ = from.bs_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      ingroup_addr_ = from.ingroup_addr_;
    }
    if (cached_has_bits & 0x00000080u) {
      led_status_ = from.led_status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_motor_status(from.motor_status());
  }
}

void interaction_BaseStationInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.interaction.BaseStationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void interaction_BaseStationInfo::CopyFrom(const interaction_BaseStationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.interaction.BaseStationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool interaction_BaseStationInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000061) != 0x00000061) return false;
  return true;
}

void interaction_BaseStationInfo::Swap(interaction_BaseStationInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void interaction_BaseStationInfo::InternalSwap(interaction_BaseStationInfo* other) {
  using std::swap;
  hostname_.Swap(&other->hostname_);
  bs_freq_.Swap(&other->bs_freq_);
  bs_location_.Swap(&other->bs_location_);
  bs_orientation_.Swap(&other->bs_orientation_);
  motor_speed_.Swap(&other->motor_speed_);
  swap(bs_id_, other->bs_id_);
  swap(ingroup_addr_, other->ingroup_addr_);
  swap(led_status_, other->led_status_);
  swap(motor_status_, other->motor_status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata interaction_BaseStationInfo::GetMetadata() const {
  protobuf_LT_2eInteraction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LT_2eInteraction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void interaction_BaseCommandInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int interaction_BaseCommandInfo::kCmdIdFieldNumber;
const int interaction_BaseCommandInfo::kCmdArg1FieldNumber;
const int interaction_BaseCommandInfo::kCmdArg2FieldNumber;
const int interaction_BaseCommandInfo::kCmdArg3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

interaction_BaseCommandInfo::interaction_BaseCommandInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_LT_2eInteraction_2eproto::InitDefaultsinteraction_BaseCommandInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.interaction.BaseCommandInfo)
}
interaction_BaseCommandInfo::interaction_BaseCommandInfo(const interaction_BaseCommandInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmd_arg1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cmd_arg1()) {
    cmd_arg1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_arg1_);
  }
  cmd_arg2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cmd_arg2()) {
    cmd_arg2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_arg2_);
  }
  cmd_arg3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cmd_arg3()) {
    cmd_arg3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_arg3_);
  }
  cmd_id_ = from.cmd_id_;
  // @@protoc_insertion_point(copy_constructor:LT.interaction.BaseCommandInfo)
}

void interaction_BaseCommandInfo::SharedCtor() {
  _cached_size_ = 0;
  cmd_arg1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_arg2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_arg3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_id_ = 0;
}

interaction_BaseCommandInfo::~interaction_BaseCommandInfo() {
  // @@protoc_insertion_point(destructor:LT.interaction.BaseCommandInfo)
  SharedDtor();
}

void interaction_BaseCommandInfo::SharedDtor() {
  cmd_arg1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_arg2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_arg3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void interaction_BaseCommandInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* interaction_BaseCommandInfo::descriptor() {
  ::protobuf_LT_2eInteraction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LT_2eInteraction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const interaction_BaseCommandInfo& interaction_BaseCommandInfo::default_instance() {
  ::protobuf_LT_2eInteraction_2eproto::InitDefaultsinteraction_BaseCommandInfo();
  return *internal_default_instance();
}

interaction_BaseCommandInfo* interaction_BaseCommandInfo::New(::google::protobuf::Arena* arena) const {
  interaction_BaseCommandInfo* n = new interaction_BaseCommandInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void interaction_BaseCommandInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.interaction.BaseCommandInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!cmd_arg1_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cmd_arg1_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!cmd_arg2_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cmd_arg2_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!cmd_arg3_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cmd_arg3_.UnsafeRawStringPointer())->clear();
    }
  }
  cmd_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool interaction_BaseCommandInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.interaction.BaseCommandInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .LT.interaction.BaseCommandInfo.BaseCommandId cmd_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::LT::interaction_BaseCommandInfo_BaseCommandId_IsValid(value)) {
            set_cmd_id(static_cast< ::LT::interaction_BaseCommandInfo_BaseCommandId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cmd_arg1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd_arg1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cmd_arg1().data(), static_cast<int>(this->cmd_arg1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.BaseCommandInfo.cmd_arg1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cmd_arg2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd_arg2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cmd_arg2().data(), static_cast<int>(this->cmd_arg2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.BaseCommandInfo.cmd_arg2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cmd_arg3 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd_arg3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cmd_arg3().data(), static_cast<int>(this->cmd_arg3().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.BaseCommandInfo.cmd_arg3");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.interaction.BaseCommandInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.interaction.BaseCommandInfo)
  return false;
#undef DO_
}

void interaction_BaseCommandInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.interaction.BaseCommandInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .LT.interaction.BaseCommandInfo.BaseCommandId cmd_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd_id(), output);
  }

  // optional string cmd_arg1 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd_arg1().data(), static_cast<int>(this->cmd_arg1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseCommandInfo.cmd_arg1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cmd_arg1(), output);
  }

  // optional string cmd_arg2 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd_arg2().data(), static_cast<int>(this->cmd_arg2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseCommandInfo.cmd_arg2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cmd_arg2(), output);
  }

  // optional string cmd_arg3 = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd_arg3().data(), static_cast<int>(this->cmd_arg3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseCommandInfo.cmd_arg3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cmd_arg3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.interaction.BaseCommandInfo)
}

::google::protobuf::uint8* interaction_BaseCommandInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.interaction.BaseCommandInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .LT.interaction.BaseCommandInfo.BaseCommandId cmd_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd_id(), target);
  }

  // optional string cmd_arg1 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd_arg1().data(), static_cast<int>(this->cmd_arg1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseCommandInfo.cmd_arg1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cmd_arg1(), target);
  }

  // optional string cmd_arg2 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd_arg2().data(), static_cast<int>(this->cmd_arg2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseCommandInfo.cmd_arg2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cmd_arg2(), target);
  }

  // optional string cmd_arg3 = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd_arg3().data(), static_cast<int>(this->cmd_arg3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.BaseCommandInfo.cmd_arg3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cmd_arg3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.interaction.BaseCommandInfo)
  return target;
}

size_t interaction_BaseCommandInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.interaction.BaseCommandInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .LT.interaction.BaseCommandInfo.BaseCommandId cmd_id = 1;
  if (has_cmd_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd_id());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string cmd_arg1 = 2;
    if (has_cmd_arg1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cmd_arg1());
    }

    // optional string cmd_arg2 = 3;
    if (has_cmd_arg2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cmd_arg2());
    }

    // optional string cmd_arg3 = 4;
    if (has_cmd_arg3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cmd_arg3());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void interaction_BaseCommandInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.interaction.BaseCommandInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const interaction_BaseCommandInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const interaction_BaseCommandInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.interaction.BaseCommandInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.interaction.BaseCommandInfo)
    MergeFrom(*source);
  }
}

void interaction_BaseCommandInfo::MergeFrom(const interaction_BaseCommandInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.interaction.BaseCommandInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_cmd_arg1();
      cmd_arg1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_arg1_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cmd_arg2();
      cmd_arg2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_arg2_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_cmd_arg3();
      cmd_arg3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_arg3_);
    }
    if (cached_has_bits & 0x00000008u) {
      cmd_id_ = from.cmd_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void interaction_BaseCommandInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.interaction.BaseCommandInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void interaction_BaseCommandInfo::CopyFrom(const interaction_BaseCommandInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.interaction.BaseCommandInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool interaction_BaseCommandInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  return true;
}

void interaction_BaseCommandInfo::Swap(interaction_BaseCommandInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void interaction_BaseCommandInfo::InternalSwap(interaction_BaseCommandInfo* other) {
  using std::swap;
  cmd_arg1_.Swap(&other->cmd_arg1_);
  cmd_arg2_.Swap(&other->cmd_arg2_);
  cmd_arg3_.Swap(&other->cmd_arg3_);
  swap(cmd_id_, other->cmd_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata interaction_BaseCommandInfo::GetMetadata() const {
  protobuf_LT_2eInteraction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LT_2eInteraction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void interaction_TermCommandInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int interaction_TermCommandInfo::kCmdIdFieldNumber;
const int interaction_TermCommandInfo::kCmdArg1FieldNumber;
const int interaction_TermCommandInfo::kCmdArg2FieldNumber;
const int interaction_TermCommandInfo::kCmdArg3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

interaction_TermCommandInfo::interaction_TermCommandInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_LT_2eInteraction_2eproto::InitDefaultsinteraction_TermCommandInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.interaction.TermCommandInfo)
}
interaction_TermCommandInfo::interaction_TermCommandInfo(const interaction_TermCommandInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmd_arg1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cmd_arg1()) {
    cmd_arg1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_arg1_);
  }
  cmd_arg2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cmd_arg2()) {
    cmd_arg2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_arg2_);
  }
  cmd_arg3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cmd_arg3()) {
    cmd_arg3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_arg3_);
  }
  cmd_id_ = from.cmd_id_;
  // @@protoc_insertion_point(copy_constructor:LT.interaction.TermCommandInfo)
}

void interaction_TermCommandInfo::SharedCtor() {
  _cached_size_ = 0;
  cmd_arg1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_arg2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_arg3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_id_ = 0;
}

interaction_TermCommandInfo::~interaction_TermCommandInfo() {
  // @@protoc_insertion_point(destructor:LT.interaction.TermCommandInfo)
  SharedDtor();
}

void interaction_TermCommandInfo::SharedDtor() {
  cmd_arg1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_arg2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_arg3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void interaction_TermCommandInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* interaction_TermCommandInfo::descriptor() {
  ::protobuf_LT_2eInteraction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LT_2eInteraction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const interaction_TermCommandInfo& interaction_TermCommandInfo::default_instance() {
  ::protobuf_LT_2eInteraction_2eproto::InitDefaultsinteraction_TermCommandInfo();
  return *internal_default_instance();
}

interaction_TermCommandInfo* interaction_TermCommandInfo::New(::google::protobuf::Arena* arena) const {
  interaction_TermCommandInfo* n = new interaction_TermCommandInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void interaction_TermCommandInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.interaction.TermCommandInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!cmd_arg1_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cmd_arg1_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!cmd_arg2_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cmd_arg2_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!cmd_arg3_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cmd_arg3_.UnsafeRawStringPointer())->clear();
    }
  }
  cmd_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool interaction_TermCommandInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.interaction.TermCommandInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .LT.interaction.TermCommandInfo.TermCommandId cmd_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::LT::interaction_TermCommandInfo_TermCommandId_IsValid(value)) {
            set_cmd_id(static_cast< ::LT::interaction_TermCommandInfo_TermCommandId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cmd_arg1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd_arg1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cmd_arg1().data(), static_cast<int>(this->cmd_arg1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.TermCommandInfo.cmd_arg1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cmd_arg2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd_arg2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cmd_arg2().data(), static_cast<int>(this->cmd_arg2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.TermCommandInfo.cmd_arg2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cmd_arg3 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd_arg3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cmd_arg3().data(), static_cast<int>(this->cmd_arg3().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.TermCommandInfo.cmd_arg3");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.interaction.TermCommandInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.interaction.TermCommandInfo)
  return false;
#undef DO_
}

void interaction_TermCommandInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.interaction.TermCommandInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .LT.interaction.TermCommandInfo.TermCommandId cmd_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd_id(), output);
  }

  // optional string cmd_arg1 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd_arg1().data(), static_cast<int>(this->cmd_arg1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TermCommandInfo.cmd_arg1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cmd_arg1(), output);
  }

  // optional string cmd_arg2 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd_arg2().data(), static_cast<int>(this->cmd_arg2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TermCommandInfo.cmd_arg2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cmd_arg2(), output);
  }

  // optional string cmd_arg3 = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd_arg3().data(), static_cast<int>(this->cmd_arg3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TermCommandInfo.cmd_arg3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cmd_arg3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.interaction.TermCommandInfo)
}

::google::protobuf::uint8* interaction_TermCommandInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.interaction.TermCommandInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .LT.interaction.TermCommandInfo.TermCommandId cmd_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd_id(), target);
  }

  // optional string cmd_arg1 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd_arg1().data(), static_cast<int>(this->cmd_arg1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TermCommandInfo.cmd_arg1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cmd_arg1(), target);
  }

  // optional string cmd_arg2 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd_arg2().data(), static_cast<int>(this->cmd_arg2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TermCommandInfo.cmd_arg2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cmd_arg2(), target);
  }

  // optional string cmd_arg3 = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd_arg3().data(), static_cast<int>(this->cmd_arg3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.TermCommandInfo.cmd_arg3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cmd_arg3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.interaction.TermCommandInfo)
  return target;
}

size_t interaction_TermCommandInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.interaction.TermCommandInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .LT.interaction.TermCommandInfo.TermCommandId cmd_id = 1;
  if (has_cmd_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd_id());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string cmd_arg1 = 2;
    if (has_cmd_arg1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cmd_arg1());
    }

    // optional string cmd_arg2 = 3;
    if (has_cmd_arg2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cmd_arg2());
    }

    // optional string cmd_arg3 = 4;
    if (has_cmd_arg3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cmd_arg3());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void interaction_TermCommandInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.interaction.TermCommandInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const interaction_TermCommandInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const interaction_TermCommandInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.interaction.TermCommandInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.interaction.TermCommandInfo)
    MergeFrom(*source);
  }
}

void interaction_TermCommandInfo::MergeFrom(const interaction_TermCommandInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.interaction.TermCommandInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_cmd_arg1();
      cmd_arg1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_arg1_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cmd_arg2();
      cmd_arg2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_arg2_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_cmd_arg3();
      cmd_arg3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_arg3_);
    }
    if (cached_has_bits & 0x00000008u) {
      cmd_id_ = from.cmd_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void interaction_TermCommandInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.interaction.TermCommandInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void interaction_TermCommandInfo::CopyFrom(const interaction_TermCommandInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.interaction.TermCommandInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool interaction_TermCommandInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  return true;
}

void interaction_TermCommandInfo::Swap(interaction_TermCommandInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void interaction_TermCommandInfo::InternalSwap(interaction_TermCommandInfo* other) {
  using std::swap;
  cmd_arg1_.Swap(&other->cmd_arg1_);
  cmd_arg2_.Swap(&other->cmd_arg2_);
  cmd_arg3_.Swap(&other->cmd_arg3_);
  swap(cmd_id_, other->cmd_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata interaction_TermCommandInfo::GetMetadata() const {
  protobuf_LT_2eInteraction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LT_2eInteraction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void interaction::InitAsDefaultInstance() {
  ::LT::_interaction_default_instance_._instance.get_mutable()->terminal_info_ = const_cast< ::LT::interaction_TerminalInfo*>(
      ::LT::interaction_TerminalInfo::internal_default_instance());
  ::LT::_interaction_default_instance_._instance.get_mutable()->terminal_cmd_info_ = const_cast< ::LT::interaction_TermCommandInfo*>(
      ::LT::interaction_TermCommandInfo::internal_default_instance());
  ::LT::_interaction_default_instance_._instance.get_mutable()->base_station_info_ = const_cast< ::LT::interaction_BaseStationInfo*>(
      ::LT::interaction_BaseStationInfo::internal_default_instance());
  ::LT::_interaction_default_instance_._instance.get_mutable()->base_cmd_info_ = const_cast< ::LT::interaction_BaseCommandInfo*>(
      ::LT::interaction_BaseCommandInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int interaction::kMsgIdFieldNumber;
const int interaction::kTerminalInfoFieldNumber;
const int interaction::kTerminalCmdInfoFieldNumber;
const int interaction::kTerminalCmdResultFieldNumber;
const int interaction::kBaseStationInfoFieldNumber;
const int interaction::kBaseCmdInfoFieldNumber;
const int interaction::kBaseCmdResultFieldNumber;
const int interaction::kConfigFileFieldNumber;
const int interaction::kTerminalInfoListFieldNumber;
const int interaction::kBaseStationInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

interaction::interaction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_LT_2eInteraction_2eproto::InitDefaultsinteraction();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LT.interaction)
}
interaction::interaction(const interaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      terminal_info_list_(from.terminal_info_list_),
      base_station_info_list_(from.base_station_info_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  config_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_config_file()) {
    config_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_file_);
  }
  if (from.has_terminal_info()) {
    terminal_info_ = new ::LT::interaction_TerminalInfo(*from.terminal_info_);
  } else {
    terminal_info_ = NULL;
  }
  if (from.has_terminal_cmd_info()) {
    terminal_cmd_info_ = new ::LT::interaction_TermCommandInfo(*from.terminal_cmd_info_);
  } else {
    terminal_cmd_info_ = NULL;
  }
  if (from.has_base_station_info()) {
    base_station_info_ = new ::LT::interaction_BaseStationInfo(*from.base_station_info_);
  } else {
    base_station_info_ = NULL;
  }
  if (from.has_base_cmd_info()) {
    base_cmd_info_ = new ::LT::interaction_BaseCommandInfo(*from.base_cmd_info_);
  } else {
    base_cmd_info_ = NULL;
  }
  ::memcpy(&msg_id_, &from.msg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&base_cmd_result_) -
    reinterpret_cast<char*>(&msg_id_)) + sizeof(base_cmd_result_));
  // @@protoc_insertion_point(copy_constructor:LT.interaction)
}

void interaction::SharedCtor() {
  _cached_size_ = 0;
  config_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&terminal_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&base_cmd_result_) -
      reinterpret_cast<char*>(&terminal_info_)) + sizeof(base_cmd_result_));
}

interaction::~interaction() {
  // @@protoc_insertion_point(destructor:LT.interaction)
  SharedDtor();
}

void interaction::SharedDtor() {
  config_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete terminal_info_;
  if (this != internal_default_instance()) delete terminal_cmd_info_;
  if (this != internal_default_instance()) delete base_station_info_;
  if (this != internal_default_instance()) delete base_cmd_info_;
}

void interaction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* interaction::descriptor() {
  ::protobuf_LT_2eInteraction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LT_2eInteraction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const interaction& interaction::default_instance() {
  ::protobuf_LT_2eInteraction_2eproto::InitDefaultsinteraction();
  return *internal_default_instance();
}

interaction* interaction::New(::google::protobuf::Arena* arena) const {
  interaction* n = new interaction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void interaction::Clear() {
// @@protoc_insertion_point(message_clear_start:LT.interaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  terminal_info_list_.Clear();
  base_station_info_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!config_file_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*config_file_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(terminal_info_ != NULL);
      terminal_info_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(terminal_cmd_info_ != NULL);
      terminal_cmd_info_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(base_station_info_ != NULL);
      base_station_info_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(base_cmd_info_ != NULL);
      base_cmd_info_->Clear();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&msg_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&base_cmd_result_) -
        reinterpret_cast<char*>(&msg_id_)) + sizeof(base_cmd_result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool interaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LT.interaction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 msg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msg_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .LT.interaction.TerminalInfo terminal_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_terminal_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .LT.interaction.TermCommandInfo terminal_cmd_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_terminal_cmd_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool terminal_cmd_result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_terminal_cmd_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &terminal_cmd_result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .LT.interaction.BaseStationInfo base_station_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_station_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .LT.interaction.BaseCommandInfo base_cmd_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_cmd_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool base_cmd_result = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_base_cmd_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &base_cmd_result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string config_file = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config_file()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->config_file().data(), static_cast<int>(this->config_file().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LT.interaction.config_file");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .LT.interaction.TerminalInfo terminal_info_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_terminal_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .LT.interaction.BaseStationInfo base_station_info_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_base_station_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LT.interaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LT.interaction)
  return false;
#undef DO_
}

void interaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LT.interaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 msg_id = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msg_id(), output);
  }

  // optional .LT.interaction.TerminalInfo terminal_info = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->terminal_info_, output);
  }

  // optional .LT.interaction.TermCommandInfo terminal_cmd_info = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->terminal_cmd_info_, output);
  }

  // optional bool terminal_cmd_result = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->terminal_cmd_result(), output);
  }

  // optional .LT.interaction.BaseStationInfo base_station_info = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->base_station_info_, output);
  }

  // optional .LT.interaction.BaseCommandInfo base_cmd_info = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->base_cmd_info_, output);
  }

  // optional bool base_cmd_result = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->base_cmd_result(), output);
  }

  // optional string config_file = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->config_file().data(), static_cast<int>(this->config_file().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.config_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->config_file(), output);
  }

  // repeated .LT.interaction.TerminalInfo terminal_info_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->terminal_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->terminal_info_list(static_cast<int>(i)), output);
  }

  // repeated .LT.interaction.BaseStationInfo base_station_info_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->base_station_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->base_station_info_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LT.interaction)
}

::google::protobuf::uint8* interaction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LT.interaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 msg_id = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msg_id(), target);
  }

  // optional .LT.interaction.TerminalInfo terminal_info = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->terminal_info_, deterministic, target);
  }

  // optional .LT.interaction.TermCommandInfo terminal_cmd_info = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->terminal_cmd_info_, deterministic, target);
  }

  // optional bool terminal_cmd_result = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->terminal_cmd_result(), target);
  }

  // optional .LT.interaction.BaseStationInfo base_station_info = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->base_station_info_, deterministic, target);
  }

  // optional .LT.interaction.BaseCommandInfo base_cmd_info = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->base_cmd_info_, deterministic, target);
  }

  // optional bool base_cmd_result = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->base_cmd_result(), target);
  }

  // optional string config_file = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->config_file().data(), static_cast<int>(this->config_file().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LT.interaction.config_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->config_file(), target);
  }

  // repeated .LT.interaction.TerminalInfo terminal_info_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->terminal_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->terminal_info_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .LT.interaction.BaseStationInfo base_station_info_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->base_station_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->base_station_info_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LT.interaction)
  return target;
}

size_t interaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LT.interaction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 msg_id = 1;
  if (has_msg_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msg_id());
  }
  // repeated .LT.interaction.TerminalInfo terminal_info_list = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->terminal_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->terminal_info_list(static_cast<int>(i)));
    }
  }

  // repeated .LT.interaction.BaseStationInfo base_station_info_list = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->base_station_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->base_station_info_list(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string config_file = 9;
    if (has_config_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->config_file());
    }

    // optional .LT.interaction.TerminalInfo terminal_info = 2;
    if (has_terminal_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->terminal_info_);
    }

    // optional .LT.interaction.TermCommandInfo terminal_cmd_info = 3;
    if (has_terminal_cmd_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->terminal_cmd_info_);
    }

    // optional .LT.interaction.BaseStationInfo base_station_info = 5;
    if (has_base_station_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->base_station_info_);
    }

    // optional .LT.interaction.BaseCommandInfo base_cmd_info = 6;
    if (has_base_cmd_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->base_cmd_info_);
    }

  }
  if (_has_bits_[0 / 32] & 192u) {
    // optional bool terminal_cmd_result = 4;
    if (has_terminal_cmd_result()) {
      total_size += 1 + 1;
    }

    // optional bool base_cmd_result = 7;
    if (has_base_cmd_result()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void interaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LT.interaction)
  GOOGLE_DCHECK_NE(&from, this);
  const interaction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const interaction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LT.interaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LT.interaction)
    MergeFrom(*source);
  }
}

void interaction::MergeFrom(const interaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LT.interaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  terminal_info_list_.MergeFrom(from.terminal_info_list_);
  base_station_info_list_.MergeFrom(from.base_station_info_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_config_file();
      config_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_file_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_terminal_info()->::LT::interaction_TerminalInfo::MergeFrom(from.terminal_info());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_terminal_cmd_info()->::LT::interaction_TermCommandInfo::MergeFrom(from.terminal_cmd_info());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_base_station_info()->::LT::interaction_BaseStationInfo::MergeFrom(from.base_station_info());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_base_cmd_info()->::LT::interaction_BaseCommandInfo::MergeFrom(from.base_cmd_info());
    }
    if (cached_has_bits & 0x00000020u) {
      msg_id_ = from.msg_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      terminal_cmd_result_ = from.terminal_cmd_result_;
    }
    if (cached_has_bits & 0x00000080u) {
      base_cmd_result_ = from.base_cmd_result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void interaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LT.interaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void interaction::CopyFrom(const interaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LT.interaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool interaction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000020) != 0x00000020) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->terminal_info_list())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->base_station_info_list())) return false;
  if (has_terminal_info()) {
    if (!this->terminal_info_->IsInitialized()) return false;
  }
  if (has_terminal_cmd_info()) {
    if (!this->terminal_cmd_info_->IsInitialized()) return false;
  }
  if (has_base_station_info()) {
    if (!this->base_station_info_->IsInitialized()) return false;
  }
  if (has_base_cmd_info()) {
    if (!this->base_cmd_info_->IsInitialized()) return false;
  }
  return true;
}

void interaction::Swap(interaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void interaction::InternalSwap(interaction* other) {
  using std::swap;
  terminal_info_list_.InternalSwap(&other->terminal_info_list_);
  base_station_info_list_.InternalSwap(&other->base_station_info_list_);
  config_file_.Swap(&other->config_file_);
  swap(terminal_info_, other->terminal_info_);
  swap(terminal_cmd_info_, other->terminal_cmd_info_);
  swap(base_station_info_, other->base_station_info_);
  swap(base_cmd_info_, other->base_cmd_info_);
  swap(msg_id_, other->msg_id_);
  swap(terminal_cmd_result_, other->terminal_cmd_result_);
  swap(base_cmd_result_, other->base_cmd_result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata interaction::GetMetadata() const {
  protobuf_LT_2eInteraction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LT_2eInteraction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace LT

// @@protoc_insertion_point(global_scope)
